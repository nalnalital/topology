// File: disk.js - Disk surface with boundary
// Desc: En franÃ§ais, dans l'architecture, je suis un disque avec projection stÃ©rÃ©ographique
// Version 1.3.0 (mapping UV corrigÃ© pour projection stÃ©rÃ©ographique)
// Author: DNAvatar.org - Arnaud Maignan
// Date: [June 08, 2025] [16:30 UTC+1]
// Logs:
//   - v1.3.0: Correction mapping UV - textureU=rayon, textureV=angle pour projection stÃ©rÃ©ographique correcte
//   - v1.2.0: Projection stÃ©rÃ©ographique inverse - centre=pÃ´le nord, bord=pÃ´le sud
//   - v1.1.0: Ajout createSurface() et config pour homogÃ©nÃ©itÃ© avec autres surfaces

// IcÃ´ne topologique simple
// Disque : surface simple sans flÃ¨ches directionnelles
export const topologyIcon = {
  center: 'ðŸ’¿'
};

// DÃ©calage texture spÃ©cifique disque (offset paramÃ©trique)
export function getTextureOffsetU() { return 0; }
export function getTextureOffsetV() { return 0; }

export function createSurface(u, v) {
  // DÃ©calage offset si besoin (optionnel, wrap uniquement sur v)
  // u = u + getTextureOffsetU();
  // u = Math.max(0, Math.min(1, u));
  v = v + getTextureOffsetV();
  if (v > 1.0) v -= 1.0; if (v < 0) v += 1.0;

  // u = rayon [0,1] (centre = pÃ´le nord, bord = pÃ´le sud)
  // v = angle [0,1] (0 Ã  2Ï€)
  const r = u; // Rayon dans le plan du disque
  const theta = v * 2 * Math.PI; // Angle autour du centre

  // Calcul stÃ©rÃ©ographique pour la latitude
  const R = 1;
  const r_sphere = u * R;
  const phi = Math.PI / 2 - 2 * Math.atan(r_sphere / 2); // latitude sphÃ©rique
  const lat = phi / Math.PI; // normalisÃ© [0,1] du pÃ´le nord (1) au sud (0)

  // Disque plat : Y=0, XZ dans le plan
  // Mapping UV stÃ©rÃ©ographique corrigÃ© :
  //   - textureU = u (rayon) â†’ centre=pÃ´le nord, bord=pÃ´le sud
  //   - textureV = v (angle) â†’ rotation autour du centre
  return {
    x: r * Math.cos(theta) * 2.5,
    y: 0,
    z: r * Math.sin(theta) * 2.5,
    textureU: v,      // longitude
    textureV: 1 - lat, // latitude stÃ©rÃ©ographique
    gridU: v,
    gridV: 1 - lat
  };
}

// Configuration spÃ©cifique disk
export const config = {
  scale: 100,
  rotX: 5,
  rotY: 0,
  rotZ: 0
};

// Gestion du drag spÃ©cifique disque
export function handleDrag(deltaX, deltaY, angles, config) {
  angles.rotY += deltaX * config.mouseSensitivity * 0.01;
  angles.rotX += deltaY * config.mouseSensitivity * 0.01;
  angles.rotX = Math.max(-Math.PI, Math.min(Math.PI, angles.rotX));
} 